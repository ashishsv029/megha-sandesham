version: "3"
services:
    redis:
        image: redis:5.0
        container_name: redis
        networks:
            - meghasandesham-main
        volumes:
            - type: volume
              source: redisdata
              target: /var/lib/redis

    postgres:
        build:
            context: ../
            dockerfile: ./docker/postgres/Dockerfile
        container_name: postgres
        # environment:
        #     - POSTGRES_PASSWORD=password --optional if you are creating other databases (as a part of sql file that was copied inside initdb.d file)
        networks:
            - meghasandesham-main
        volumes:
            - type: volume
              source: postgresdata
              target: /var/lib/postgresql/data # by default postgres stored data in this file.. so we need to replace this path with our created volume.. so the data is stored in postgresql container as well as mirrored into volume

    app:
        container_name: meghasandesham
        build:
            context: ../
            #dockerfile: ./docker/app/Dockerfile
            #dockerfile: ./docker/app/multistage/Dockerfile
            #dockerfile: ./docker/app/multistage/minimalistic-base/Dockerfile
            dockerfile: ./docker/app/multistage/distroless-base/Dockerfile
            
            target: finalstage


        depends_on:
            - redis
            - postgres
        entrypoint: [] #["bash", "-c"]
        #command: dockerize -wait tcp://redis:6379 -wait tcp://postgres:5432 -timeout 50s bash -c "echo please create an app start script && chmod +x run-app.sh && sh run-app.sh"
                #run a bash file which starts the app and the app's prerequisite command

        #for distroless images use sh instead of bash
        command: 
            - dockerize 
            - -wait 
            - tcp://redis:6379 
            - -wait 
            - tcp://postgres:5432 
            - -timeout 
            - 50s 
            - /bin/sh 
            - -c 
            - "echo please create an app start script && chmod +x run-app-in-distroless-container.sh && echo which cmd using.. && which node && which prisma && ls /usr/local/bin && /usr/local/bin/prisma migrate status && ./run-app-in-distroless-container.sh"

        
        restart: on-failure
        networks:
            - meghasandesham-main
        ports:
            - 3100:3100
    
networks:
    meghasandesham-main:
        driver: bridge

volumes:
    redisdata:
    postgresdata:

      

